spring:
  application:
    name: gatewayserver
  config:
    import: optional:configserver:http://localhost:8071/
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: false
              lowerCaseServiceId: true
  data:
    redis:
      connect-timeout: 2s
      host: 192.168.1.164
      port: 6379
      timeout: 1s
  otel:
    service:
      name: gatewayserver
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://192.168.1.164:7080/realms/master/protocol/openid-connect/certs"

info:
  app:
    name: gatewayserver
    description: Gatewayserver for EazyBank microservices
    version: 2.0

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    com:
      dipeshbc:
        gatewayserver: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000